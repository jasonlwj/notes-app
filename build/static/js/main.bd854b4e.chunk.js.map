{"version":3,"sources":["services/notes.js","components/Note.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newNote","post","id","put","Note","note","toggleImportance","label","important","content","onClick","Notification","message","className","App","useState","notes","setNotes","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","changedNote","returnedNote","catch","error","setTimeout","n","toggleImportanceOf","onSubmit","event","preventDefault","noteToAdd","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"wNAEMA,EAAU,aAkBD,EAhBA,WAEd,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc3B,EAXA,SAAAC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS3B,EANA,SAACG,EAAIF,GAEnB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCD3BK,EAbF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACfC,EAAQF,EAAKG,UAChB,qBACA,iBAEH,OACC,+BACEH,EAAKI,QAAU,IAChB,wBAAQC,QAASJ,EAAjB,SAAoCC,QCGxBI,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAKA,EAIJ,qBAAKC,UAAU,QAAf,SACED,IAJK,MCiFME,EA/EH,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACTC,EADS,KACFC,EADE,OAEeF,mBAAS,IAFxB,mBAETf,EAFS,KAEAkB,EAFA,OAGeH,oBAAS,GAHxB,mBAGTI,EAHS,KAGAC,EAHA,OAIyBL,mBAAS,MAJlC,mBAITM,EAJS,KAIKC,EAJL,KAOjBC,qBAAU,WACTC,IAEE3B,MAAK,SAAA4B,GAAY,OAAIR,EAASQ,QAC9B,IAGH,IAsCMC,EAAcP,EACjBH,EACAA,EAAMW,QAAO,SAAAtB,GAAI,OAAIA,EAAKG,aAG7B,OACC,qBAAKK,UAAU,MAAf,SACC,gCACC,uCACA,cAAC,EAAD,CAAcD,QAASS,IACvB,yBAAQX,QAdiB,kBAAMU,GAAYD,IAc3C,kBACOA,EAAU,YAAc,SAE/B,6BACEO,EAAYE,KAAI,SAAAvB,GAAI,OACpB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBApC5B,SAAAJ,GAC1B,IAAMG,EAAOW,EAAMa,MAAK,SAAAxB,GAAI,OAAIA,EAAKH,KAAOA,KACtC4B,EAAW,2BAAQzB,GAAR,IAAcG,WAAYH,EAAKG,YAEhDgB,EACStB,EAAI4B,GACXjC,MAAK,SAAAkC,GACLd,EAASD,EAAMY,KAAI,SAAAvB,GAAI,OAAIA,EAAKH,KAAOA,EAAK6B,EAAe1B,SAE3D2B,OAAM,SAAAC,GACNX,EAAgB,aAAD,OAAcjB,EAAKI,QAAnB,0CACfyB,YAAW,kBAAMZ,EAAgB,QAAO,KACxCL,EAASD,EAAMW,QAAO,SAAAQ,GAAC,OAAIA,EAAEjC,KAAOA,SAwBsBkC,CAAmB/B,EAAKH,MAArEG,EAAKH,SAGlB,uBAAMmC,SAxDO,SAAAC,GACfA,EAAMC,iBACN,IAAMC,EAAY,CACjB/B,QAAST,EACTyC,MAAM,IAAIC,MAAOC,cACjBnC,UAAWoC,KAAKC,SAAW,IAG5BrB,EACSgB,GACP3C,MAAK,SAAAkC,GACLd,EAASD,EAAM8B,OAAOf,IACtBb,EAAW,QA4CX,UACC,uBAAO6B,MAAO/C,EAASgD,SAtBC,SAAAV,GAAK,OAAIpB,EAAWoB,EAAMW,OAAOF,UAuBzD,wBAAQG,KAAK,SAAb,2B,MCzELC,IAASC,OACR,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bd854b4e.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl)\n\treturn request.then(response => response.data)\n}\n\nconst create = newNote => {\n\tconst request = axios.post(baseUrl, newNote)\n\treturn request.then(response => response.data)\n}\n\nconst update = (id, newNote) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newNote)\n\treturn request.then(response => response.data)\n}\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default { getAll, create, update }\n","import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n\tconst label = note.important \n\t\t? 'make not important'\n\t\t: 'make important'\n\t\n\treturn (\n\t\t<li>\n\t\t\t{note.content + ' '}\n\t\t\t<button onClick={toggleImportance}>{label}</button>\n\t\t</li>\n\t)\n}\n\nexport default Note\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n\tif (!message)\n\t\treturn null\n\n\treturn (\n\t\t<div className=\"error\">\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n\nexport default Notification \n","import React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n\tconst [ notes, setNotes ] = useState([])\n\tconst [ newNote, setNewNote ] = useState('')\n\tconst [ showAll, setShowAll ] = useState(true) // false: only show important notes\n\tconst [ errorMessage, setErrorMessage ] = useState(null)\n\t\n\t// get all notes\n\tuseEffect(() => {\n\t\tnoteService\n\t\t\t.getAll()\n\t\t\t.then(initialNotes => setNotes(initialNotes))\n\t}, [])\n\n\t// create note\n\tconst addNote = event => {\n\t\tevent.preventDefault()\n\t\tconst noteToAdd = {\n\t\t\tcontent: newNote,\n\t\t\tdate: new Date().toISOString(),\n\t\t\timportant: Math.random() < 0.5\n\t\t}\n\n\t\tnoteService\n\t\t\t.create(noteToAdd)\n\t\t\t.then(returnedNote => {\n\t\t\t\tsetNotes(notes.concat(returnedNote))\n\t\t\t\tsetNewNote('')\n\t\t\t})\n\t}\n\n\t// update note\n\tconst toggleImportanceOf = id => {\n\t\tconst note = notes.find(note => note.id === id)\n\t\tconst changedNote = { ...note, important: !note.important }\n\n\t\tnoteService\n\t\t\t.update(id, changedNote)\n\t\t\t.then(returnedNote => {\n\t\t\t\tsetNotes(notes.map(note => note.id === id ? returnedNote : note))\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetErrorMessage(`the note '${note.content}' was already deleted from the server`)\n\t\t\t\tsetTimeout(() => setErrorMessage(null), 5000)\n\t\t\t\tsetNotes(notes.filter(n => n.id !== id))\n\t\t\t})\n\t}\n\n\t// handle form state\n\tconst handleToggleShowAll = () => setShowAll(!showAll)\n\tconst handleNewNoteChange = event => setNewNote(event.target.value)\n\n\t// grab notes that match filter criteria\n\tconst notesToShow = showAll \n\t\t? notes \n\t\t: notes.filter(note => note.important)\n\n\t// render it all to the screen\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div>\n\t\t\t\t<h1>Notes</h1>\n\t\t\t\t<Notification message={errorMessage} />\n\t\t\t\t<button onClick={handleToggleShowAll}>\n\t\t\t\t\tshow {showAll ? 'important' : 'all'}\n\t\t\t\t</button>\n\t\t\t\t<ul>\n\t\t\t\t\t{notesToShow.map(note => \n\t\t\t\t\t\t<Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t\t<form onSubmit={addNote}>\n\t\t\t\t\t<input value={newNote} onChange={handleNewNoteChange} />\n\t\t\t\t\t<button type=\"submit\">save</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}